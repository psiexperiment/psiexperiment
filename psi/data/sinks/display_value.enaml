from atom.api import Value
from enaml.application import deferred_call
from enaml.widgets.api import Container, Label
from enaml.workbench.api import Extension

import numpy as np

from psi.core.enaml.api import PSIDockItem
from ..sink import SinkWithSource, SinkWithSourceManifest



class DisplayValue(SinkWithSource):

    value = Value(np.nan)

    def _update_data(self, data):
        value = data[-1]
        deferred_call(lambda: setattr(self, 'value', value))


def format_value(value):
    return '{:.1f}'.format(value)


enamldef DisplayValueManifest(SinkWithSourceManifest): manifest:

    Extension:
        id = 'workspace'
        point = 'psi.experiment.workspace'
        PSIDockItem: di:
            closable = False
            name << manifest.contribution.name
            title << manifest.contribution.label

            Container:
                Label:
                    text << format_value(manifest.contribution.value)
