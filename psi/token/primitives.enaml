from __future__ import division

import logging
log = logging.getLogger(__name__)

from psiaudio.stim import (BandlimitedNoiseFactory, BroadbandNoiseFactory,
                           ChirpFactory, Cos2EnvelopeFactory, GateFactory,
                           RepeatFactory, SAMEnvelopeFactory,
                           SquareWaveEnvelopeFactory, SquareWaveFactory,
                           SilenceFactory, ToneFactory, WavSequenceFactory)

from psi.context.api import Parameter, EnumParameter
from .block import EpochBlock, ContinuousBlock


enamldef Gate(EpochBlock): block:

    factory = GateFactory
    name = 'envelope'
    label = 'envelope'

    Parameter:
        name = 'duration'
        label = 'duration (s)'
        compact_label = 'dur'
        default = 4.0

    Parameter:
        name = 'start_time'
        label = 'start time (s)'
        compact_label = 'start'
        default = 0.0


enamldef Cos2Envelope(Gate): block:

    factory = Cos2EnvelopeFactory
    name = 'envelope'
    label = 'envelope'

    Parameter:
        name = 'rise_time'
        label = 'rise time (s)'
        compact_label = 'env rise'
        default = 1.0


enamldef SquareWaveEnvelope(ContinuousBlock): block:

    factory = SquareWaveEnvelopeFactory
    name = 'RAM'
    label = 'RAM'

    Parameter:
        name = 'depth'
        label = 'depth (frac.)'
        compact_label = 'depth'
        default = 1.0

    Parameter:
        name = 'fm'
        label = 'Modulation frequency (Hz)'
        compact_label = 'fm'
        default = 5.0

    Parameter:
        name = 'duty_cycle'
        label = 'Duty cycle (frac.)'
        compact_label = 'dc'
        default = 0.5


enamldef SAMEnvelope(ContinuousBlock): block:

    factory = SAMEnvelopeFactory
    name = 'SAM'
    label = 'SAM'

    Parameter:
        name = 'depth'
        label = 'depth (frac.)'
        compact_label = 'depth'
        default = 1.0

    Parameter:
        name = 'fm'
        label = 'Modulation frequency (Hz)'
        compact_label = 'fm'
        default = 5.0

    Parameter:
        name = 'delay'
        label = 'AM delay (s)'
        compact_label = 'delay'
        default = 0.0

    EnumParameter:
        name = 'direction'
        label = 'Initial AM direction'
        compact_label = 'dir'
        default = 'positive'
        choices = {'positive': 1, 'negative': -1}


enamldef BroadbandNoise(ContinuousBlock):

    factory = BroadbandNoiseFactory
    name = 'broadband_noise'
    label = 'broadband noise'

    Parameter:
        name = 'level'
        label = 'level (dB SPL)'
        compact_label = 'level'
        default = 60.0

    Parameter:
        name = 'seed'
        label = 'random seed'
        compact_label = 'seed'
        default = 1

    EnumParameter:
        name = 'equalize'
        default = 'yes'
        choices = {'yes': True, 'no': False}


enamldef BandlimitedNoise(BroadbandNoise):

    factory = BandlimitedNoiseFactory
    name = 'bandlimited_noise'
    label = 'bandlimited noise'

    Parameter:
        name = 'fl'
        label = 'highpass cutoff (Hz)'
        compact_label = 'fl'
        default = 0.1e3

    Parameter:
        name = 'fh'
        label = 'lowpass cutoff (Hz)'
        compact_label = 'fh'
        default = 20e3

    Parameter:
        name = 'filter_rolloff'
        label = 'filter rolloff (octaves)'
        compact_label = 'fr'
        default = 3

    Parameter:
        name = 'passband_attenuation'
        label = 'passband attenuation (dB)'
        compact_label = 'pass. atten.'
        default = 0.1

    Parameter:
        name = 'stopband_attenuation'
        label = 'stopband attenuation (dB)'
        compact_label = 'stop. atten.'
        default = 90.0

    Parameter:
        name = 'polarity'
        label = 'polarity'
        compact_label = 'pol.'
        default = 1


enamldef Tone(ContinuousBlock):

    factory = ToneFactory
    name = 'tone'
    label = 'tone'

    Parameter:
        name = 'level'
        label = 'level (dB SPL)'
        compact_label = 'level'
        default = 60.0

    Parameter:
        name = 'frequency'
        label = 'frequency (Hz)'
        compact_label = 'fc'
        default = 1000.0

    EnumParameter:
        name = 'polarity'
        label = 'polarity (radians)'
        compact_label = 'pol'
        default = 'positive'
        choices = {'positive': 1, 'negative': -1}

    Parameter:
        name = 'phase'
        label = 'phase'
        compact_label = 'Î˜'
        default = 0


enamldef Silence(ContinuousBlock):

    factory = SilenceFactory
    name = 'silence'
    label = 'silence'


enamldef SquareWave(ContinuousBlock):

    factory = SquareWaveFactory
    name = 'square_wave'
    label = 'square wave'

    Parameter:
        name = 'level'
        label = 'level'
        compact_label = 'level'
        default = 5

    Parameter:
        name = 'frequency'
        label = 'frequency (Hz)'
        compact_label = 'frequency'
        default = 5

    Parameter:
        name = 'duty_cycle'
        label = 'duty cycle'
        compact_label = 'duty_cycle'
        default = 0.5


enamldef Repeat(EpochBlock):

    factory = RepeatFactory
    name = 'repeat'
    label = 'repeat'

    Parameter:
        name = 'n'
        label = 'N'
        default = 440

    Parameter:
        name = 'skip_n'
        label = 'skip N'
        default = 0

    Parameter:
        name = 'rate'
        label = 'rate'
        default = 40

    Parameter:
        name = 'delay'
        label = 'delay'
        default = 0


enamldef Chirp(EpochBlock):

    factory = ChirpFactory
    name = 'chirp'
    label = 'chirp'

    Parameter:
        name = 'level'
        label = 'level (dB)'
        default = -40

    Parameter:
        name = 'start_frequency'
        label = 'start frequency (Hz)'
        default = 250.0

    Parameter:
        name = 'end_frequency'
        label = 'end frequency (Hz)'
        default = 50e3

    Parameter:
        name = 'duration'
        label = 'duration (sec)'
        default = 1/50.0


enamldef WavSequence(ContinuousBlock):

    factory = WavSequenceFactory
    name = 'Sequence of wav files'
    label = 'wavseq'

    Parameter:
        name = 'path'
        label = 'folder'
        dtype = 'S'

    Parameter:
        name = 'level'
        label = 'level (dB peSPL)'
        dtype = 'double'
