import os.path

from enaml.workbench.api import PluginManifest, Extension
import numpy as np

from psi import get_config

from psi.controller.engines.nidaq import (NIDAQEngine,
                                          NIDAQHardwareAIChannel,
                                          NIDAQHardwareAOChannel)
from psi.controller.input import Transform
from psi.controller.calibration.api import FlatCalibration


def mv_to_C(mv):
    c = (mv-0.050)/0.020 + 35
    m = (c < 35) | (c > 40)
    c[m] = np.nan
    return c


enamldef IOManifest(PluginManifest): manifest:

    Extension:
        id = 'backend'
        point = 'psi.controller.io'

        NIDAQEngine:
            name = 'NI_misc'
            hw_ai_monitor_period = 0.125

            NIDAQHardwareAIChannel:
                # Output is 50 mV at 35 degrees Centigrade, 150 mV at 40
                # degrees Centigrade. 25 mV/C between 35 and 40.
                label = 'Temperature'
                name = 'temperature_channel'
                channel = 'PXI1Slot5/ai0'
                start_trigger = '/PXI1Slot8/ao/StartTrigger'
                fs = 25e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'differential'
                terminal_coupling = 'DC'
                unit = 'V'

                Transform:
                    name = 'temperature'
                    function = mv_to_C

            NIDAQHardwareAIChannel:
                label = 'EEG'
                name = 'eeg_channel'
                channel = 'PXI1Slot5/ai1'
                start_trigger = '/PXI1Slot8/ao/StartTrigger'
                fs = 25e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'differential'
                terminal_coupling = 'DC'
                unit = 'V'

            NIDAQHardwareAIChannel:
                label = 'TTL monitor'
                name = 'ttl_monitor_channel'
                channel = 'PXI1Slot7/ai1'
                start_trigger = '/PXI1Slot8/ao/StartTrigger'
                fs = 25e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'differential'
                terminal_coupling = 'DC'
                unit = 'V'

            NIDAQHardwareAOChannel:
                label = 'TTL'
                name = 'ttl_output'
                channel = 'PXI1Slot7/ao1'
                start_trigger = '/PXI1Slot8/ao/StartTrigger'
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (0, 5)
                dtype = 'float64'
                terminal_mode = 'differential'

        NIDAQEngine:
            name = 'NI_audio'
            master_clock = True

            hw_ai_monitor_period = 0.125
            hw_ao_monitor_period = 0.125
            hw_ao_buffer_size = 5

            NIDAQHardwareAOChannel:
                label = 'Speaker 1'
                name = 'speaker_1'
                channel = 'PXI1Slot8/ao0'
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-1, 1)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'
                calibration = FlatCalibration.as_attenuation()
                #: The nominal max range in the spec sheet is higher, but we clip it to a
                #: reasonable range to avoid damaging connected equipment.
                max_range = (-1.0, 1.0)

            NIDAQHardwareAOChannel:
                label = 'Speaker 2'
                name = 'speaker_2'
                channel = 'PXI1Slot8/ao1'
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-1, 1)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'
                calibration = FlatCalibration.as_attenuation()

            NIDAQHardwareAIChannel:
                label = 'Starship microphone'
                name = 'microphone_channel'
                channel = 'PXI1Slot8/ai0'
                start_trigger = '/PXI1Slot8/ao/StartTrigger'
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'
                terminal_coupling = 'DC'
                gain = 40
                calibration_user_editable = True

            NIDAQHardwareAIChannel:
                label = 'Calibration microphone'
                name = 'reference_microphone_channel'
                channel = 'PXI1Slot8/ai1'
                start_trigger = '/PXI1Slot8/ao/StartTrigger'
                fs = 100e3
                reference_clock = 'PXI_Clk10'
                expected_range = (-10, 10)
                dtype = 'float64'
                terminal_mode = 'pseudodifferential'
                terminal_coupling = 'DC'
                gain = 40
                calibration_user_editable = True
                #: The nominal max range in the spec sheet is higher, but we clip it to a
                #: reasonable range to avoid damaging connected equipment.
                max_range = (-1.0, 1.0)
